// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProposalList matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ProposalList
    onClose={[Function]}
    onSelect={[Function]}
    proposals={Array []}
    selectedProposal={null}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Styled(Header)
          hasSegment={true}
        >
          <Styled(Body)
            style={
              Object {
                "borderColor": "transparent",
                "borderWidth": 0,
                "width": "100%",
              }
            }
          >
            <Component
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <Styled(Icon)
                name="ios-search"
                style={
                  Object {
                    "color": "#222",
                  }
                }
              />
              <Styled(Input)
                onChange={[Function]}
                placeholder="Search proposals"
                placeholderTextColor="#222"
                style={
                  Object {
                    "color": "#222",
                  }
                }
              />
            </Component>
          </Styled(Body)>
          <Styled(Right)
            style={
              Object {
                "borderColor": "transparent",
                "flex": 0,
              }
            }
          >
            <Styled(Button)
              onPress={[Function]}
              transparent={true}
            >
              <Styled(Text)>
                Close
              </Styled(Text)>
            </Styled(Button)>
          </Styled(Right)>
        </Styled(Header)>,
        <Component
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <Component
            style={
              Object {
                "alignItems": "center",
                "borderBottomColor": "#622461",
                "borderBottomWidth": 1,
                "flexDirection": "row",
                "flexWrap": "wrap",
                "height": 35,
              }
            }
          >
            <Picker
              mode="dialog"
              onValueChange={[Function]}
              selectedValue={0}
              style={
                Object {
                  "flex": 1,
                  "height": "100%",
                }
              }
            >
              <PickerItem
                label="By Country"
                value={0}
              />
              <PickerItem
                label="By Quality"
                value={1}
              />
            </Picker>
            <TouchableOpacity
              activeOpacity={0.2}
              onPress={[Function]}
              style={
                Array [
                  Object {
                    "borderBottomWidth": 0,
                    "borderColor": "#622461",
                    "borderRightWidth": 0,
                    "borderWidth": 1,
                    "height": "100%",
                    "justifyContent": "center",
                    "padding": 3,
                  },
                  Object {
                    "backgroundColor": "#622461",
                  },
                ]
              }
            >
              <Styled(Text)
                style={
                  Array [
                    Object {
                      "color": "#622461",
                      "fontSize": 13,
                    },
                    Object {
                      "color": "#fff",
                    },
                  ]
                }
              >
                ALL (0)
              </Styled(Text)>
            </TouchableOpacity>
            <TouchableOpacity
              activeOpacity={0.2}
              onPress={[Function]}
              style={
                Array [
                  Object {
                    "borderBottomWidth": 0,
                    "borderColor": "#622461",
                    "borderRightWidth": 0,
                    "borderWidth": 1,
                    "height": "100%",
                    "justifyContent": "center",
                    "padding": 3,
                  },
                ]
              }
            >
              <Styled(Text)
                style={
                  Array [
                    Object {
                      "color": "#622461",
                      "fontSize": 13,
                    },
                  ]
                }
              >
                OPENVPN (0)
              </Styled(Text)>
            </TouchableOpacity>
            <TouchableOpacity
              activeOpacity={0.2}
              onPress={[Function]}
              style={
                Array [
                  Object {
                    "borderBottomWidth": 0,
                    "borderColor": "#622461",
                    "borderRightWidth": 0,
                    "borderWidth": 1,
                    "height": "100%",
                    "justifyContent": "center",
                    "padding": 3,
                  },
                ]
              }
            >
              <Styled(Text)
                style={
                  Array [
                    Object {
                      "color": "#622461",
                      "fontSize": 13,
                    },
                  ]
                }
              >
                WIREGUARD (0)
              </Styled(Text)>
            </TouchableOpacity>
          </Component>
          <FlatList
            ListEmptyComponent={[Function]}
            data={Array []}
            disableVirtualization={false}
            horizontal={false}
            initialNumToRender={10}
            keyExtractor={[Function]}
            maxToRenderPerBatch={10}
            numColumns={1}
            onEndReachedThreshold={2}
            renderItem={[Function]}
            scrollEventThrottle={50}
            updateCellsBatchingPeriod={50}
            windowSize={21}
          />
        </Component>,
      ],
      "virtual": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Styled(Body)
              style={
                Object {
                  "borderColor": "transparent",
                  "borderWidth": 0,
                  "width": "100%",
                }
              }
            >
              <Component
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <Styled(Icon)
                  name="ios-search"
                  style={
                    Object {
                      "color": "#222",
                    }
                  }
                />
                <Styled(Input)
                  onChange={[Function]}
                  placeholder="Search proposals"
                  placeholderTextColor="#222"
                  style={
                    Object {
                      "color": "#222",
                    }
                  }
                />
              </Component>
            </Styled(Body)>,
            <Styled(Right)
              style={
                Object {
                  "borderColor": "transparent",
                  "flex": 0,
                }
              }
            >
              <Styled(Button)
                onPress={[Function]}
                transparent={true}
              >
                <Styled(Text)>
                  Close
                </Styled(Text)>
              </Styled(Button)>
            </Styled(Right)>,
          ],
          "hasSegment": true,
          "virtual": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Component
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <Styled(Icon)
                  name="ios-search"
                  style={
                    Object {
                      "color": "#222",
                    }
                  }
                />
                <Styled(Input)
                  onChange={[Function]}
                  placeholder="Search proposals"
                  placeholderTextColor="#222"
                  style={
                    Object {
                      "color": "#222",
                    }
                  }
                />
              </Component>,
              "style": Object {
                "borderColor": "transparent",
                "borderWidth": 0,
                "width": "100%",
              },
              "virtual": undefined,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Styled(Icon)
                    name="ios-search"
                    style={
                      Object {
                        "color": "#222",
                      }
                    }
                  />,
                  <Styled(Input)
                    onChange={[Function]}
                    placeholder="Search proposals"
                    placeholderTextColor="#222"
                    style={
                      Object {
                        "color": "#222",
                      }
                    }
                  />,
                ],
                "style": Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "name": "ios-search",
                    "style": Object {
                      "color": "#222",
                    },
                    "virtual": undefined,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "onChange": [Function],
                    "placeholder": "Search proposals",
                    "placeholderTextColor": "#222",
                    "style": Object {
                      "color": "#222",
                    },
                    "virtual": undefined,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Styled(Button)
                onPress={[Function]}
                transparent={true}
              >
                <Styled(Text)>
                  Close
                </Styled(Text)>
              </Styled(Button)>,
              "style": Object {
                "borderColor": "transparent",
                "flex": 0,
              },
              "virtual": undefined,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Styled(Text)>
                  Close
                </Styled(Text)>,
                "onPress": [Function],
                "transparent": true,
                "virtual": undefined,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Close",
                  "virtual": undefined,
                },
                "ref": null,
                "rendered": "Close",
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Component
              style={
                Object {
                  "alignItems": "center",
                  "borderBottomColor": "#622461",
                  "borderBottomWidth": 1,
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "height": 35,
                }
              }
            >
              <Picker
                mode="dialog"
                onValueChange={[Function]}
                selectedValue={0}
                style={
                  Object {
                    "flex": 1,
                    "height": "100%",
                  }
                }
              >
                <PickerItem
                  label="By Country"
                  value={0}
                />
                <PickerItem
                  label="By Quality"
                  value={1}
                />
              </Picker>
              <TouchableOpacity
                activeOpacity={0.2}
                onPress={[Function]}
                style={
                  Array [
                    Object {
                      "borderBottomWidth": 0,
                      "borderColor": "#622461",
                      "borderRightWidth": 0,
                      "borderWidth": 1,
                      "height": "100%",
                      "justifyContent": "center",
                      "padding": 3,
                    },
                    Object {
                      "backgroundColor": "#622461",
                    },
                  ]
                }
              >
                <Styled(Text)
                  style={
                    Array [
                      Object {
                        "color": "#622461",
                        "fontSize": 13,
                      },
                      Object {
                        "color": "#fff",
                      },
                    ]
                  }
                >
                  ALL (0)
                </Styled(Text)>
              </TouchableOpacity>
              <TouchableOpacity
                activeOpacity={0.2}
                onPress={[Function]}
                style={
                  Array [
                    Object {
                      "borderBottomWidth": 0,
                      "borderColor": "#622461",
                      "borderRightWidth": 0,
                      "borderWidth": 1,
                      "height": "100%",
                      "justifyContent": "center",
                      "padding": 3,
                    },
                  ]
                }
              >
                <Styled(Text)
                  style={
                    Array [
                      Object {
                        "color": "#622461",
                        "fontSize": 13,
                      },
                    ]
                  }
                >
                  OPENVPN (0)
                </Styled(Text)>
              </TouchableOpacity>
              <TouchableOpacity
                activeOpacity={0.2}
                onPress={[Function]}
                style={
                  Array [
                    Object {
                      "borderBottomWidth": 0,
                      "borderColor": "#622461",
                      "borderRightWidth": 0,
                      "borderWidth": 1,
                      "height": "100%",
                      "justifyContent": "center",
                      "padding": 3,
                    },
                  ]
                }
              >
                <Styled(Text)
                  style={
                    Array [
                      Object {
                        "color": "#622461",
                        "fontSize": 13,
                      },
                    ]
                  }
                >
                  WIREGUARD (0)
                </Styled(Text)>
              </TouchableOpacity>
            </Component>,
            <FlatList
              ListEmptyComponent={[Function]}
              data={Array []}
              disableVirtualization={false}
              horizontal={false}
              initialNumToRender={10}
              keyExtractor={[Function]}
              maxToRenderPerBatch={10}
              numColumns={1}
              onEndReachedThreshold={2}
              renderItem={[Function]}
              scrollEventThrottle={50}
              updateCellsBatchingPeriod={50}
              windowSize={21}
            />,
          ],
          "style": Object {
            "flex": 1,
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Picker
                  mode="dialog"
                  onValueChange={[Function]}
                  selectedValue={0}
                  style={
                    Object {
                      "flex": 1,
                      "height": "100%",
                    }
                  }
                >
                  <PickerItem
                    label="By Country"
                    value={0}
                  />
                  <PickerItem
                    label="By Quality"
                    value={1}
                  />
                </Picker>,
                Array [
                  <TouchableOpacity
                    activeOpacity={0.2}
                    onPress={[Function]}
                    style={
                      Array [
                        Object {
                          "borderBottomWidth": 0,
                          "borderColor": "#622461",
                          "borderRightWidth": 0,
                          "borderWidth": 1,
                          "height": "100%",
                          "justifyContent": "center",
                          "padding": 3,
                        },
                        Object {
                          "backgroundColor": "#622461",
                        },
                      ]
                    }
                  >
                    <Styled(Text)
                      style={
                        Array [
                          Object {
                            "color": "#622461",
                            "fontSize": 13,
                          },
                          Object {
                            "color": "#fff",
                          },
                        ]
                      }
                    >
                      ALL (0)
                    </Styled(Text)>
                  </TouchableOpacity>,
                  <TouchableOpacity
                    activeOpacity={0.2}
                    onPress={[Function]}
                    style={
                      Array [
                        Object {
                          "borderBottomWidth": 0,
                          "borderColor": "#622461",
                          "borderRightWidth": 0,
                          "borderWidth": 1,
                          "height": "100%",
                          "justifyContent": "center",
                          "padding": 3,
                        },
                      ]
                    }
                  >
                    <Styled(Text)
                      style={
                        Array [
                          Object {
                            "color": "#622461",
                            "fontSize": 13,
                          },
                        ]
                      }
                    >
                      OPENVPN (0)
                    </Styled(Text)>
                  </TouchableOpacity>,
                  <TouchableOpacity
                    activeOpacity={0.2}
                    onPress={[Function]}
                    style={
                      Array [
                        Object {
                          "borderBottomWidth": 0,
                          "borderColor": "#622461",
                          "borderRightWidth": 0,
                          "borderWidth": 1,
                          "height": "100%",
                          "justifyContent": "center",
                          "padding": 3,
                        },
                      ]
                    }
                  >
                    <Styled(Text)
                      style={
                        Array [
                          Object {
                            "color": "#622461",
                            "fontSize": 13,
                          },
                        ]
                      }
                    >
                      WIREGUARD (0)
                    </Styled(Text)>
                  </TouchableOpacity>,
                ],
              ],
              "style": Object {
                "alignItems": "center",
                "borderBottomColor": "#622461",
                "borderBottomWidth": 1,
                "flexDirection": "row",
                "flexWrap": "wrap",
                "height": 35,
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <PickerItem
                      label="By Country"
                      value={0}
                    />,
                    <PickerItem
                      label="By Quality"
                      value={1}
                    />,
                  ],
                  "mode": "dialog",
                  "onValueChange": [Function],
                  "selectedValue": 0,
                  "style": Object {
                    "flex": 1,
                    "height": "100%",
                  },
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "0",
                    "nodeType": "class",
                    "props": Object {
                      "label": "By Country",
                      "value": 0,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "1",
                    "nodeType": "class",
                    "props": Object {
                      "label": "By Quality",
                      "value": 1,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "all (0)",
                "nodeType": "class",
                "props": Object {
                  "activeOpacity": 0.2,
                  "children": <Styled(Text)
                    style={
                      Array [
                        Object {
                          "color": "#622461",
                          "fontSize": 13,
                        },
                        Object {
                          "color": "#fff",
                        },
                      ]
                    }
                  >
                    ALL (0)
                  </Styled(Text)>,
                  "onPress": [Function],
                  "style": Array [
                    Object {
                      "borderBottomWidth": 0,
                      "borderColor": "#622461",
                      "borderRightWidth": 0,
                      "borderWidth": 1,
                      "height": "100%",
                      "justifyContent": "center",
                      "padding": 3,
                    },
                    Object {
                      "backgroundColor": "#622461",
                    },
                  ],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "ALL (0)",
                    "style": Array [
                      Object {
                        "color": "#622461",
                        "fontSize": 13,
                      },
                      Object {
                        "color": "#fff",
                      },
                    ],
                    "virtual": undefined,
                  },
                  "ref": null,
                  "rendered": "ALL (0)",
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "openvpn (0)",
                "nodeType": "class",
                "props": Object {
                  "activeOpacity": 0.2,
                  "children": <Styled(Text)
                    style={
                      Array [
                        Object {
                          "color": "#622461",
                          "fontSize": 13,
                        },
                      ]
                    }
                  >
                    OPENVPN (0)
                  </Styled(Text)>,
                  "onPress": [Function],
                  "style": Array [
                    Object {
                      "borderBottomWidth": 0,
                      "borderColor": "#622461",
                      "borderRightWidth": 0,
                      "borderWidth": 1,
                      "height": "100%",
                      "justifyContent": "center",
                      "padding": 3,
                    },
                  ],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "OPENVPN (0)",
                    "style": Array [
                      Object {
                        "color": "#622461",
                        "fontSize": 13,
                      },
                    ],
                    "virtual": undefined,
                  },
                  "ref": null,
                  "rendered": "OPENVPN (0)",
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "wireguard (0)",
                "nodeType": "class",
                "props": Object {
                  "activeOpacity": 0.2,
                  "children": <Styled(Text)
                    style={
                      Array [
                        Object {
                          "color": "#622461",
                          "fontSize": 13,
                        },
                      ]
                    }
                  >
                    WIREGUARD (0)
                  </Styled(Text)>,
                  "onPress": [Function],
                  "style": Array [
                    Object {
                      "borderBottomWidth": 0,
                      "borderColor": "#622461",
                      "borderRightWidth": 0,
                      "borderWidth": 1,
                      "height": "100%",
                      "justifyContent": "center",
                      "padding": 3,
                    },
                  ],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "WIREGUARD (0)",
                    "style": Array [
                      Object {
                        "color": "#622461",
                        "fontSize": 13,
                      },
                    ],
                    "virtual": undefined,
                  },
                  "ref": null,
                  "rendered": "WIREGUARD (0)",
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "ListEmptyComponent": [Function],
              "data": Array [],
              "disableVirtualization": false,
              "horizontal": false,
              "initialNumToRender": 10,
              "keyExtractor": [Function],
              "maxToRenderPerBatch": 10,
              "numColumns": 1,
              "onEndReachedThreshold": 2,
              "renderItem": [Function],
              "scrollEventThrottle": 50,
              "updateCellsBatchingPeriod": 50,
              "windowSize": 21,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Styled(Header)
            hasSegment={true}
          >
            <Styled(Body)
              style={
                Object {
                  "borderColor": "transparent",
                  "borderWidth": 0,
                  "width": "100%",
                }
              }
            >
              <Component
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <Styled(Icon)
                  name="ios-search"
                  style={
                    Object {
                      "color": "#222",
                    }
                  }
                />
                <Styled(Input)
                  onChange={[Function]}
                  placeholder="Search proposals"
                  placeholderTextColor="#222"
                  style={
                    Object {
                      "color": "#222",
                    }
                  }
                />
              </Component>
            </Styled(Body)>
            <Styled(Right)
              style={
                Object {
                  "borderColor": "transparent",
                  "flex": 0,
                }
              }
            >
              <Styled(Button)
                onPress={[Function]}
                transparent={true}
              >
                <Styled(Text)>
                  Close
                </Styled(Text)>
              </Styled(Button)>
            </Styled(Right)>
          </Styled(Header)>,
          <Component
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <Component
              style={
                Object {
                  "alignItems": "center",
                  "borderBottomColor": "#622461",
                  "borderBottomWidth": 1,
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "height": 35,
                }
              }
            >
              <Picker
                mode="dialog"
                onValueChange={[Function]}
                selectedValue={0}
                style={
                  Object {
                    "flex": 1,
                    "height": "100%",
                  }
                }
              >
                <PickerItem
                  label="By Country"
                  value={0}
                />
                <PickerItem
                  label="By Quality"
                  value={1}
                />
              </Picker>
              <TouchableOpacity
                activeOpacity={0.2}
                onPress={[Function]}
                style={
                  Array [
                    Object {
                      "borderBottomWidth": 0,
                      "borderColor": "#622461",
                      "borderRightWidth": 0,
                      "borderWidth": 1,
                      "height": "100%",
                      "justifyContent": "center",
                      "padding": 3,
                    },
                    Object {
                      "backgroundColor": "#622461",
                    },
                  ]
                }
              >
                <Styled(Text)
                  style={
                    Array [
                      Object {
                        "color": "#622461",
                        "fontSize": 13,
                      },
                      Object {
                        "color": "#fff",
                      },
                    ]
                  }
                >
                  ALL (0)
                </Styled(Text)>
              </TouchableOpacity>
              <TouchableOpacity
                activeOpacity={0.2}
                onPress={[Function]}
                style={
                  Array [
                    Object {
                      "borderBottomWidth": 0,
                      "borderColor": "#622461",
                      "borderRightWidth": 0,
                      "borderWidth": 1,
                      "height": "100%",
                      "justifyContent": "center",
                      "padding": 3,
                    },
                  ]
                }
              >
                <Styled(Text)
                  style={
                    Array [
                      Object {
                        "color": "#622461",
                        "fontSize": 13,
                      },
                    ]
                  }
                >
                  OPENVPN (0)
                </Styled(Text)>
              </TouchableOpacity>
              <TouchableOpacity
                activeOpacity={0.2}
                onPress={[Function]}
                style={
                  Array [
                    Object {
                      "borderBottomWidth": 0,
                      "borderColor": "#622461",
                      "borderRightWidth": 0,
                      "borderWidth": 1,
                      "height": "100%",
                      "justifyContent": "center",
                      "padding": 3,
                    },
                  ]
                }
              >
                <Styled(Text)
                  style={
                    Array [
                      Object {
                        "color": "#622461",
                        "fontSize": 13,
                      },
                    ]
                  }
                >
                  WIREGUARD (0)
                </Styled(Text)>
              </TouchableOpacity>
            </Component>
            <FlatList
              ListEmptyComponent={[Function]}
              data={Array []}
              disableVirtualization={false}
              horizontal={false}
              initialNumToRender={10}
              keyExtractor={[Function]}
              maxToRenderPerBatch={10}
              numColumns={1}
              onEndReachedThreshold={2}
              renderItem={[Function]}
              scrollEventThrottle={50}
              updateCellsBatchingPeriod={50}
              windowSize={21}
            />
          </Component>,
        ],
        "virtual": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Styled(Body)
                style={
                  Object {
                    "borderColor": "transparent",
                    "borderWidth": 0,
                    "width": "100%",
                  }
                }
              >
                <Component
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Styled(Icon)
                    name="ios-search"
                    style={
                      Object {
                        "color": "#222",
                      }
                    }
                  />
                  <Styled(Input)
                    onChange={[Function]}
                    placeholder="Search proposals"
                    placeholderTextColor="#222"
                    style={
                      Object {
                        "color": "#222",
                      }
                    }
                  />
                </Component>
              </Styled(Body)>,
              <Styled(Right)
                style={
                  Object {
                    "borderColor": "transparent",
                    "flex": 0,
                  }
                }
              >
                <Styled(Button)
                  onPress={[Function]}
                  transparent={true}
                >
                  <Styled(Text)>
                    Close
                  </Styled(Text)>
                </Styled(Button)>
              </Styled(Right)>,
            ],
            "hasSegment": true,
            "virtual": undefined,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Component
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Styled(Icon)
                    name="ios-search"
                    style={
                      Object {
                        "color": "#222",
                      }
                    }
                  />
                  <Styled(Input)
                    onChange={[Function]}
                    placeholder="Search proposals"
                    placeholderTextColor="#222"
                    style={
                      Object {
                        "color": "#222",
                      }
                    }
                  />
                </Component>,
                "style": Object {
                  "borderColor": "transparent",
                  "borderWidth": 0,
                  "width": "100%",
                },
                "virtual": undefined,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <Styled(Icon)
                      name="ios-search"
                      style={
                        Object {
                          "color": "#222",
                        }
                      }
                    />,
                    <Styled(Input)
                      onChange={[Function]}
                      placeholder="Search proposals"
                      placeholderTextColor="#222"
                      style={
                        Object {
                          "color": "#222",
                        }
                      }
                    />,
                  ],
                  "style": Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  },
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "name": "ios-search",
                      "style": Object {
                        "color": "#222",
                      },
                      "virtual": undefined,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "onChange": [Function],
                      "placeholder": "Search proposals",
                      "placeholderTextColor": "#222",
                      "style": Object {
                        "color": "#222",
                      },
                      "virtual": undefined,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Styled(Button)
                  onPress={[Function]}
                  transparent={true}
                >
                  <Styled(Text)>
                    Close
                  </Styled(Text)>
                </Styled(Button)>,
                "style": Object {
                  "borderColor": "transparent",
                  "flex": 0,
                },
                "virtual": undefined,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Styled(Text)>
                    Close
                  </Styled(Text)>,
                  "onPress": [Function],
                  "transparent": true,
                  "virtual": undefined,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Close",
                    "virtual": undefined,
                  },
                  "ref": null,
                  "rendered": "Close",
                  "type": [Function],
                },
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Component
                style={
                  Object {
                    "alignItems": "center",
                    "borderBottomColor": "#622461",
                    "borderBottomWidth": 1,
                    "flexDirection": "row",
                    "flexWrap": "wrap",
                    "height": 35,
                  }
                }
              >
                <Picker
                  mode="dialog"
                  onValueChange={[Function]}
                  selectedValue={0}
                  style={
                    Object {
                      "flex": 1,
                      "height": "100%",
                    }
                  }
                >
                  <PickerItem
                    label="By Country"
                    value={0}
                  />
                  <PickerItem
                    label="By Quality"
                    value={1}
                  />
                </Picker>
                <TouchableOpacity
                  activeOpacity={0.2}
                  onPress={[Function]}
                  style={
                    Array [
                      Object {
                        "borderBottomWidth": 0,
                        "borderColor": "#622461",
                        "borderRightWidth": 0,
                        "borderWidth": 1,
                        "height": "100%",
                        "justifyContent": "center",
                        "padding": 3,
                      },
                      Object {
                        "backgroundColor": "#622461",
                      },
                    ]
                  }
                >
                  <Styled(Text)
                    style={
                      Array [
                        Object {
                          "color": "#622461",
                          "fontSize": 13,
                        },
                        Object {
                          "color": "#fff",
                        },
                      ]
                    }
                  >
                    ALL (0)
                  </Styled(Text)>
                </TouchableOpacity>
                <TouchableOpacity
                  activeOpacity={0.2}
                  onPress={[Function]}
                  style={
                    Array [
                      Object {
                        "borderBottomWidth": 0,
                        "borderColor": "#622461",
                        "borderRightWidth": 0,
                        "borderWidth": 1,
                        "height": "100%",
                        "justifyContent": "center",
                        "padding": 3,
                      },
                    ]
                  }
                >
                  <Styled(Text)
                    style={
                      Array [
                        Object {
                          "color": "#622461",
                          "fontSize": 13,
                        },
                      ]
                    }
                  >
                    OPENVPN (0)
                  </Styled(Text)>
                </TouchableOpacity>
                <TouchableOpacity
                  activeOpacity={0.2}
                  onPress={[Function]}
                  style={
                    Array [
                      Object {
                        "borderBottomWidth": 0,
                        "borderColor": "#622461",
                        "borderRightWidth": 0,
                        "borderWidth": 1,
                        "height": "100%",
                        "justifyContent": "center",
                        "padding": 3,
                      },
                    ]
                  }
                >
                  <Styled(Text)
                    style={
                      Array [
                        Object {
                          "color": "#622461",
                          "fontSize": 13,
                        },
                      ]
                    }
                  >
                    WIREGUARD (0)
                  </Styled(Text)>
                </TouchableOpacity>
              </Component>,
              <FlatList
                ListEmptyComponent={[Function]}
                data={Array []}
                disableVirtualization={false}
                horizontal={false}
                initialNumToRender={10}
                keyExtractor={[Function]}
                maxToRenderPerBatch={10}
                numColumns={1}
                onEndReachedThreshold={2}
                renderItem={[Function]}
                scrollEventThrottle={50}
                updateCellsBatchingPeriod={50}
                windowSize={21}
              />,
            ],
            "style": Object {
              "flex": 1,
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Picker
                    mode="dialog"
                    onValueChange={[Function]}
                    selectedValue={0}
                    style={
                      Object {
                        "flex": 1,
                        "height": "100%",
                      }
                    }
                  >
                    <PickerItem
                      label="By Country"
                      value={0}
                    />
                    <PickerItem
                      label="By Quality"
                      value={1}
                    />
                  </Picker>,
                  Array [
                    <TouchableOpacity
                      activeOpacity={0.2}
                      onPress={[Function]}
                      style={
                        Array [
                          Object {
                            "borderBottomWidth": 0,
                            "borderColor": "#622461",
                            "borderRightWidth": 0,
                            "borderWidth": 1,
                            "height": "100%",
                            "justifyContent": "center",
                            "padding": 3,
                          },
                          Object {
                            "backgroundColor": "#622461",
                          },
                        ]
                      }
                    >
                      <Styled(Text)
                        style={
                          Array [
                            Object {
                              "color": "#622461",
                              "fontSize": 13,
                            },
                            Object {
                              "color": "#fff",
                            },
                          ]
                        }
                      >
                        ALL (0)
                      </Styled(Text)>
                    </TouchableOpacity>,
                    <TouchableOpacity
                      activeOpacity={0.2}
                      onPress={[Function]}
                      style={
                        Array [
                          Object {
                            "borderBottomWidth": 0,
                            "borderColor": "#622461",
                            "borderRightWidth": 0,
                            "borderWidth": 1,
                            "height": "100%",
                            "justifyContent": "center",
                            "padding": 3,
                          },
                        ]
                      }
                    >
                      <Styled(Text)
                        style={
                          Array [
                            Object {
                              "color": "#622461",
                              "fontSize": 13,
                            },
                          ]
                        }
                      >
                        OPENVPN (0)
                      </Styled(Text)>
                    </TouchableOpacity>,
                    <TouchableOpacity
                      activeOpacity={0.2}
                      onPress={[Function]}
                      style={
                        Array [
                          Object {
                            "borderBottomWidth": 0,
                            "borderColor": "#622461",
                            "borderRightWidth": 0,
                            "borderWidth": 1,
                            "height": "100%",
                            "justifyContent": "center",
                            "padding": 3,
                          },
                        ]
                      }
                    >
                      <Styled(Text)
                        style={
                          Array [
                            Object {
                              "color": "#622461",
                              "fontSize": 13,
                            },
                          ]
                        }
                      >
                        WIREGUARD (0)
                      </Styled(Text)>
                    </TouchableOpacity>,
                  ],
                ],
                "style": Object {
                  "alignItems": "center",
                  "borderBottomColor": "#622461",
                  "borderBottomWidth": 1,
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "height": 35,
                },
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <PickerItem
                        label="By Country"
                        value={0}
                      />,
                      <PickerItem
                        label="By Quality"
                        value={1}
                      />,
                    ],
                    "mode": "dialog",
                    "onValueChange": [Function],
                    "selectedValue": 0,
                    "style": Object {
                      "flex": 1,
                      "height": "100%",
                    },
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": "0",
                      "nodeType": "class",
                      "props": Object {
                        "label": "By Country",
                        "value": 0,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "1",
                      "nodeType": "class",
                      "props": Object {
                        "label": "By Quality",
                        "value": 1,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "all (0)",
                  "nodeType": "class",
                  "props": Object {
                    "activeOpacity": 0.2,
                    "children": <Styled(Text)
                      style={
                        Array [
                          Object {
                            "color": "#622461",
                            "fontSize": 13,
                          },
                          Object {
                            "color": "#fff",
                          },
                        ]
                      }
                    >
                      ALL (0)
                    </Styled(Text)>,
                    "onPress": [Function],
                    "style": Array [
                      Object {
                        "borderBottomWidth": 0,
                        "borderColor": "#622461",
                        "borderRightWidth": 0,
                        "borderWidth": 1,
                        "height": "100%",
                        "justifyContent": "center",
                        "padding": 3,
                      },
                      Object {
                        "backgroundColor": "#622461",
                      },
                    ],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "ALL (0)",
                      "style": Array [
                        Object {
                          "color": "#622461",
                          "fontSize": 13,
                        },
                        Object {
                          "color": "#fff",
                        },
                      ],
                      "virtual": undefined,
                    },
                    "ref": null,
                    "rendered": "ALL (0)",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "openvpn (0)",
                  "nodeType": "class",
                  "props": Object {
                    "activeOpacity": 0.2,
                    "children": <Styled(Text)
                      style={
                        Array [
                          Object {
                            "color": "#622461",
                            "fontSize": 13,
                          },
                        ]
                      }
                    >
                      OPENVPN (0)
                    </Styled(Text)>,
                    "onPress": [Function],
                    "style": Array [
                      Object {
                        "borderBottomWidth": 0,
                        "borderColor": "#622461",
                        "borderRightWidth": 0,
                        "borderWidth": 1,
                        "height": "100%",
                        "justifyContent": "center",
                        "padding": 3,
                      },
                    ],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "OPENVPN (0)",
                      "style": Array [
                        Object {
                          "color": "#622461",
                          "fontSize": 13,
                        },
                      ],
                      "virtual": undefined,
                    },
                    "ref": null,
                    "rendered": "OPENVPN (0)",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "wireguard (0)",
                  "nodeType": "class",
                  "props": Object {
                    "activeOpacity": 0.2,
                    "children": <Styled(Text)
                      style={
                        Array [
                          Object {
                            "color": "#622461",
                            "fontSize": 13,
                          },
                        ]
                      }
                    >
                      WIREGUARD (0)
                    </Styled(Text)>,
                    "onPress": [Function],
                    "style": Array [
                      Object {
                        "borderBottomWidth": 0,
                        "borderColor": "#622461",
                        "borderRightWidth": 0,
                        "borderWidth": 1,
                        "height": "100%",
                        "justifyContent": "center",
                        "padding": 3,
                      },
                    ],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "WIREGUARD (0)",
                      "style": Array [
                        Object {
                          "color": "#622461",
                          "fontSize": 13,
                        },
                      ],
                      "virtual": undefined,
                    },
                    "ref": null,
                    "rendered": "WIREGUARD (0)",
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "ListEmptyComponent": [Function],
                "data": Array [],
                "disableVirtualization": false,
                "horizontal": false,
                "initialNumToRender": 10,
                "keyExtractor": [Function],
                "maxToRenderPerBatch": 10,
                "numColumns": 1,
                "onEndReachedThreshold": 2,
                "renderItem": [Function],
                "scrollEventThrottle": 50,
                "updateCellsBatchingPeriod": 50,
                "windowSize": 21,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
